syntax on
set number
set relativenumber
set encoding=utf8
set incsearch
set hlsearch
set ignorecase
set smartcase
set autoread
set tabstop=2
set softtabstop=2
set shiftwidth=2
set autoindent
set expandtab
set nocp
set hidden
set backspace=indent,eol,start
set mouse=a
set viminfo+=n~/.config/vim/viminfo

"different indention for python
autocmd Filetype python setlocal expandtab tabstop=4 shiftwidth=4 softtabstop=4
"deactivate 'expandtab' for makefiles
autocm Filetype make setlocal noexpandtab

"whitespace settings
set listchars=eol:$,tab:>-,space:.,trail:~,extends:>,precedes:<,nbsp:%
"F5: toggle 'list'
noremap <F5> :set list!<CR>
inoremap <F5> <C-o>:set list!<CR>
cnoremap <F5> <C-c>:set list!<CR>

"Str-A: select all
nmap <C-a> gg0vG$
imap <C-a> <Esc>gg0vG$

"Save
nmap <C-z> :w<CR>
imap <C-z> <Esc>:w<CR>a

"Copy to Clipboard (on arch install `gvim`, on debian/ubuntu install `vim-gtk` or `vim-gnome`)
xmap <C-c> "+y
vmap <C-c> "+y

"Remap of unneeded 'ex'-Mode, quit force with Q in normal mode
nmap Q :q<CR>

"Paste from Clipboard
"nmap <C-v> "+p
"imap <C-v> <Esc>"+pa
"vmap <C-v> "+p

"Remapping for 'Jump to Tag' on German Keyboard
nnoremap ü <C-]>
nnoremap Ü <C-O>

"""""""""""""""""""""""""""""""""""
"Mappings for quick Buffer Actions"
"""""""""""""""""""""""""""""""""""
" Move to the previous buffer
nnoremap gp :bp<CR> 
" Move the the next buffer
nnoremap gn :bn<CR>
" List all possible buffers
nnoremap gl :ls<CR>
" List all possible buffers an accept new buffer argument (eg to switch to buffer with #x)
nnoremap gb :ls<CR>:b

"""""""""""""""""""""""
"Vim Explorer Settings"
"""""""""""""""""""""""
let g:netrw_banner = 0
let g:netrw_liststyle = 3
let g:netrw_browse_split = 4
let g:netrw_altv = 1
let g:netrw_winsize = 15
nmap <C-c> :Lexplore<CR>
imap <C-c> <Esc>:Lexplore<CR>


""""""""""""""""""""""
"Move lines Shortcuts"
""""""""""""""""""""""
nnoremap K :m .-2<CR>==
nnoremap J :m .+1<CR>==
nnoremap <S-UP> :m .-2<CR>==
nnoremap <S-DOWN> :m .+1<CR>==
nnoremap <A-UP> :m .-2<CR>==
nnoremap <A-DOWN> :m .+1<CR>==
vnoremap K :m '<-2<CR>gv=gv
vnoremap J :m '>+1<CR>gv=gv
vnoremap <S-UP> :m '<-2<CR>gv=gv
vnoremap <S-DOWN> :m '>+1<CR>gv=gv
vnoremap <A-UP> :m '<-2<CR>gv=gv
vnoremap <A-DOWN> :m '>+1<CR>gv=gv

""""""""""""""""""""""""""""
"Custom Shortcuts for Panes"
""""""""""""""""""""""""""""
nnoremap <C-p><C-v> :vsp 
nnoremap <C-p><C-h> :sp 
nnoremap <C-p><C-s> :sp 

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Custom function to show diff for unsaved file                             "
"from https://vim.fandom.com/wiki/Diff_current_buffer_and_the_original_file"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! s:DiffWithSaved()
  let filetype=&ft
  diffthis
  vnew | r # | normal! 1Gdd
  diffthis
  exe "setlocal bt=nofile bh=wipe nobl noswf ro ft=" . filetype
endfunction
com! DiffSaved call s:DiffWithSaved()

"""""""""""""""""""""""""""""""""""""""""""""
"Jump to last position when reopening a file"
"""""""""""""""""""""""""""""""""""""""""""""
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal! g'\"" | endif
endif

set ttymouse=sgr
